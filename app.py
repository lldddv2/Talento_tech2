import streamlit as st
from PIL import Image # Pillow para manejar im√°genes PNG
import os # Para manejar rutas de archivos

# --- CONFIGURACI√ìN DE LA P√ÅGINA ---
st.set_page_config(
    page_title="Dashboard de Datos Urbanos",
    page_icon="üèôÔ∏è",
    layout="wide", # Usa el ancho completo de la pantalla
    initial_sidebar_state="expanded"
)

# --- FUNCI√ìN PARA CONSTRUIR LA RUTA DE LA IMAGEN ---
# Esta funci√≥n es crucial para que Streamlit encuentre tus im√°genes
def get_image_path(image_name):
    # Obtiene la ruta del directorio actual del script (donde est√° app.py)
    script_dir = os.path.dirname(__file__)
    # Construye la ruta completa a la imagen dentro de la carpeta 'images'
    image_path = os.path.join(script_dir, "images", image_name)
    return image_path

# --- BARRA LATERAL ---
with st.sidebar:
    st.title("üèôÔ∏è Navegaci√≥n")
    st.markdown("---")

    # Selector de p√°gina/secci√≥n
    page_selection = st.radio(
        "Selecciona una secci√≥n:",
        ["üå¨Ô∏è Calidad del Aire (PM2.5)", "üöá Uso del Metro", "‚ÑπÔ∏è Acerca de"]
    )

    st.markdown("---")
    st.write("Desarrollado con en Streamlit")

# --- CONTENIDO PRINCIPAL ---

if page_selection == "üå¨Ô∏è Calidad del Aire (PM2.5)":
    st.title("üå¨Ô∏è An√°lisis de Calidad del Aire (PM2.5)")
    st.write("Explora los datos hist√≥ricos y animaciones de la concentraci√≥n de part√≠culas PM2.5 en diferentes zonas.")

    st.markdown("---")

    # Secci√≥n para la Zona CA
    st.header("üìç Zona CA")
    st.markdown("### Datos de PM2.5 para la Zona CA")

    col_ca_hist, col_ca_anim = st.columns(2)

    with col_ca_hist:
        st.subheader("Mapa Hist√≥rico de PM2.5 (CA)")
        image_path_cah_pm25 = get_image_path("CAH_PM25.png")
        if os.path.exists(image_path_cah_pm25):
            st.image(image_path_cah_pm25, caption="Concentraci√≥n Hist√≥rica de PM2.5 en la Zona CA", use_container_width=True)
            st.markdown("Ciclo diurno de usuarios que toman el Metro de Medell√≠n como forma de transporte. La l√≠nea negra corresponde al promedio, mientras que el √°rea gris corresponde al rango de variaci√≥n definido a partir de m√°s o menos una desviaci√≥n est√°ndar.")
        else:
            st.warning(f"Imagen no encontrada: {image_path_cah_pm25}")

    with col_ca_anim:
        st.subheader("Animaci√≥n de Evoluci√≥n de PM2.5 (CA)")
        # Para GIFs, Streamlit necesita la ruta directa o bytes.
        # get_image_path() ya devuelve la ruta, as√≠ que la usamos directamente.
        gif_path_ca_animacion = get_image_path("CA_PM25_animacion.gif")
        if os.path.exists(gif_path_ca_animacion):
            st.image(gif_path_ca_animacion, caption="Evoluci√≥n Temporal de PM2.5 en la Zona CA", use_container_width=True)
            st.markdown("Esta animaci√≥n visualiza c√≥mo han variado las concentraciones de PM2.5 en la Zona CA a lo largo del tiempo.")
        else:
            st.warning(f"GIF no encontrado: {gif_path_ca_animacion}")

    st.markdown("---")

    # Secci√≥n para la Zona CD
    st.header("üìç Zona CD")
    st.markdown("### Datos de PM2.5 para la Zona CD")

    col_cd_hist, col_cd_anim = st.columns(2)

    with col_cd_hist:
        st.subheader("Mapa Hist√≥rico de PM2.5 (CD)")
        image_path_cdh_pm25 = get_image_path("CDH_PM25.png")
        if os.path.exists(image_path_cdh_pm25):
            st.image(image_path_cdh_pm25, caption="Concentraci√≥n Hist√≥rica de PM2.5 en la Zona CD", use_container_width=True)
            st.markdown("Ciclo diurno del material particulado PM2.5. La l√≠nea negra s√≥lida corresponde al promedio de toda la red de ciudadanos cient√≠ficos, mientras que las l√≠neas grises corresponden a cada uno de los sensores de bajo costo que conforman la red de ciudadanos cient√≠ficos.")
        else:
            st.warning(f"Imagen no encontrada: {image_path_cdh_pm25}")

    with col_cd_anim:
        st.subheader("Animaci√≥n de Evoluci√≥n de PM2.5 (CD)")
        gif_path_cd_animacion = get_image_path("CD_PM25_animacion.gif")
        if os.path.exists(gif_path_cd_animacion):
            st.image(gif_path_cd_animacion, caption="Evoluci√≥n Temporal de PM2.5 en la Zona CD", use_container_width=True)
            st.markdown("Observa la variaci√≥n de las concentraciones de PM2.5 en la Zona CD a lo largo del tiempo a trav√©s de esta animaci√≥n.")
        else:
            st.warning(f"GIF no encontrado: {gif_path_cd_animacion}")


elif page_selection == "üöá Uso del Metro":
    st.title("üöá An√°lisis de Uso del Metro")
    st.write("Visualizaci√≥n de los patrones de uso del sistema de transporte Metro.")

    st.markdown("---")

    col_cd_1, col_cd_2 = st.columns(2)

    with col_cd_1:
        st.subheader("Ciclo diurno de Usuarios del Metro")
        image_path_cdh_metro_users = get_image_path("CDH_Metro_users.png")
        if os.path.exists(image_path_cdh_metro_users):
            st.image(image_path_cdh_metro_users, caption="Gr√°fico de Usuarios del Metro en la Zona CD", use_container_width=True)
            st.markdown("""
                Ciclo diurno de usuarios que toman el Metro de Medell√≠n como forma de transporte. La l√≠nea negra corresponde al promedio, mientras que el √°rea gris corresponde al rango de variaci√≥n definido a partir de m√°s o menos una desviaci√≥n est√°ndar.
            """)
        else:
            st.warning(f"Imagen no encontrada: {image_path_cdh_metro_users}")
    
    with col_cd_2:
        st.subheader("Ciclo anual de usuarios del Metro")
        image_path_cdh_metro_users_hist = get_image_path("CAH_metro_users.png")
        if os.path.exists(image_path_cdh_metro_users_hist):
            st.image(image_path_cdh_metro_users_hist, caption="Histograma de Usuarios del Metro en la Zona CD", use_container_width=True)
            st.markdown("""
                Ciclo anual de usuarios que toman el Metro de Medell√≠n como forma de transporte. La l√≠nea negra s√≥lida corresponde al promedio total, mientras que la l√≠nea verde corresponde al promedio removiendo los a√±os de pandemia. Finalmente, las √°reas grises y verdes corresponden al rango de variabilidad definido a partir de m√°s o menos una desviaci√≥n est√°ndar.
            """)
        else:
            st.warning(f"Imagen no encontrada: {image_path_cdh_metro_users_hist}")


elif page_selection == "‚ÑπÔ∏è Acerca de":
    st.title("‚ÑπÔ∏è Acerca de este Dashboard")
    st.write("Este dashboard ha sido creado para visualizar y explorar datos clave relacionados con la calidad del aire y el uso del transporte p√∫blico en √°reas urbanas.")

    st.subheader("Fuentes de Datos")
    st.write("""
    *   **Calidad del Aire (PM2.5):** Datos hist√≥ricos de sensores de calidad del aire.
    *   **Uso del Metro:** Registros de afluencia de pasajeros del sistema de transporte Metro.
    """)

    st.subheader("Tecnolog√≠as Utilizadas")
    st.markdown("""
    *   **Streamlit:** Para la construcci√≥n interactiva del dashboard.
    *   **Python:** Lenguaje de programaci√≥n.
    *   **Pillow (PIL):** Librer√≠a para el procesamiento de im√°genes.
    *   **Librer√≠as de visualizaci√≥n (ej: Matplotlib, Seaborn):**
    """)

    st.subheader("Desarrolladores")
    st.write("""
    *   Alexis Ayala
    *   Sara Carvajal
    *   Juan Manuel Herrera
    *   Luis D√≠az 
""")
    st.write("Contacto: [s.carvajal@udea.edu.co](mailto:s.carvajal@udea.edu.co)")
    st.markdown("---")
    st.write("Fecha de Creaci√≥n: 2025-06-11")